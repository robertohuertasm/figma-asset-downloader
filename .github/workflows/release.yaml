name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        rust: [stable]
        os: [ubuntu-latest, macOS-10.15, macOS-11.0, windows-latest]
        include:
          - os: macOS-10.15
            rust: stable
            artifact_name: fad
            release_name: fad_osx_10_15.zip
          - os: macOS-11.0
            rust: stable
            artifact_name: fad
            release_name: fad_osx_11.zip
          - os: windows-latest
            rust: stable
            artifact_name: fad.exe
            release_name: fad_windows.zip
          - os: ubuntu-latest
            rust: stable
            artifact_name: fad
            release_name: fad_linux.zip
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@master
        with:
          rust-version: ${{ matrix.rust }}
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build the crate for release
        shell: bash
        run: |
          cargo build --release
          ls -la target/release
      # - name: Applying upx
      #   uses: svenstaro/upx-action@v2
      #   with:
      #     file: target/release/${{ matrix.artifact_name }}
      - name: Zipping the artifact
        shell: bash
        run: |
          echo "Setting exec permissions"
          chmod +x ./target/release/${{ matrix.artifact_name }}
          echo "Zipping"
          if [[ "${{matrix.os}}" == "macOS-10.15" ]] || [[ "${{matrix.os}}" == "macOS-11.0" ]]
          then
            zip ${{matrix.release_name}} target/release/${{matrix.artifact_name}}
          else
            7z a ${{matrix.release_name}} target/release/${{matrix.artifact_name}}
          fi
      - name: Upload binaries to GitHub release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.release_name }}
          asset_name: ${{ matrix.release_name }}
          tag: ${{github.ref}}
  crates:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@master
        with:
          rust-version: ${{ matrix.rust }}
      - name: Checkout
        uses: actions/checkout@v1
      - name: Publish to crates.io
        run: |
          cargo login ${{secrets.crates_key}}
          cargo publish
